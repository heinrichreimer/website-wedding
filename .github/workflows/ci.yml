name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 7 * * *'

jobs:
  build:
    name: 🏗️ Hugo build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.123.4'
          extended: true
      - name: 🧰 Install dart-sass-embedded
        run: |
          curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/1.56.2/sass_embedded-1.56.2-linux-x64.tar.gz;
          echo "9e4f455f7b8619959d7878af2862383be58392eb963a14ff87cc512c03701e2a  sass_embedded-1.56.2-linux-x64.tar.gz" | sha256sum -c;
          tar -xvf sass_embedded-1.56.2-linux-x64.tar.gz;
          echo "$GITHUB_WORKSPACE/sass_embedded/" >> $GITHUB_PATH
      - name: ♻️ Cache Hugo modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/hugo_cache
          key: ${{ runner.os }}-hugo-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-hugo-modules-
      - name: 🏗 Build
        run: hugo
        env:
          HUGO_PARAMS_githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: ♻️ Cache link checker requests
        uses: actions/cache@v4
        with:
          path: .lycheecache
          key: link-checker-${{ github.sha }}
          restore-keys: link-checker-
      - name: 🔄 Check links
        id: linkCheck
        uses: lycheeverse/lychee-action@v1
        with:
          lycheeVersion: '0.13.0'
          args: --require-https --verbose --no-progress --base public/ --cache --max-cache-age 1d --exclude https://twitter.com/H1iReimer/ --exclude heinrich@reimer.family --accept 999 --max-retries 10 --max-redirects 10 public/
          fail: true
      - name: 📤 Upload public pages
        uses: actions/upload-artifact@v4
        with:
          name: public-pages
          path: public/
          if-no-files-found: error
      - name: 📤 Upload public pages (for GitHub Pages)
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/
  deploy:
    name: 🚀 Deploy
    if: |
      (github.event_name == 'push' || 
        github.event_name == 'workflow_dispatch' || 
        github.event_name == 'schedule') && 
      (github.ref == 'refs/heads/main' || 
        startsWith(github.ref, 'refs/tags'))
    needs:
      - build
    permissions:
      pages: write
      id-token: write
    environment:
      name: GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download public pages
        uses: actions/download-artifact@v4
        with:
          name: public-pages
          path: public/
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  release:
    name: 🚀 Create GitHub release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🏷️ Get version tag
        id: get-version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - name: 📥 Download public pages
        uses: actions/download-artifact@master
        with:
          name: public-pages
          path: public/
      - name: 🗜️ Create public pages archive
        run: zip -r public.zip public/
      - name: 🚀 Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get-version.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
